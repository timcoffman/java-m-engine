<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>edu.vanderbilt.clinicalsystems</groupId>
		<artifactId>clinicalsystems-parent-pom</artifactId>
		<version>01.00.10</version>
		<relativePath />
	</parent>
	<artifactId>EpicAnnotationProjectPom</artifactId>
	<version>00.00.01-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
       	<build.timestamp>${maven.build.timestamp}</build.timestamp> <!-- workaround for bug preventing use of maven.build.timestamp in resource filtering -->
       	<maven.test.opts>-Xms2048m -Xmx2048m</maven.test.opts>
	</properties>

	<!--
	<scm>
		<connection>scm:svn:https://vcs.mc.vanderbilt.edu/clinsysrepos/???/trunk</connection>
		<developerConnection>scm:svn:https://vcs.mc.vanderbilt.edu/clinsysrepos/???/trunk</developerConnection>
		<url>https://vcs.mc.vanderbilt.edu/clinsysrepos/???/trunk</url>
	</scm>
	-->

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.antlr</groupId>
					<artifactId>antlr4-maven-plugin</artifactId>
					<version>4.5.3</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					    <forkMode>pertest</forkMode>
					    <argLine>${maven.test.opts}</argLine>
					    <testFailureIgnore>false</testFailureIgnore>
					    <skip>false</skip>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					    <forkMode>pertest</forkMode>
					    <argLine>${maven.test.opts}</argLine>
					    <testFailureIgnore>false</testFailureIgnore>
					    <skip>false</skip>
				</configuration>
			</plugin>

			<plugin>
				<!-- creates JARs of code from src/test/java which can be used with a
					dependency of type "test-jar" c.f. http://stackoverflow.com/questions/174560/sharing-test-code-in-maven#174670 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- bootstrap these repositories, so parent-pom can be found -->
	<repositories>
		<repository>
			<id>vandy-snapshots-pro</id>
			<name>Internal Snapshot Repository</name>
			<url>http://repo.mc.vanderbilt.edu/nexus/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		
		<repository>
			<id>vandy-releases-pro</id>
			<name>Internal Release Repository</name>
			<url>http://repo.mc.vanderbilt.edu/nexus/content/repositories/releases/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.antlr</groupId>
				<artifactId>antlr4-runtime</artifactId>
				<version>4.5.3</version>
			</dependency>
		
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-all</artifactId>
				<version>1.3</version>
			</dependency>
			
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>EpicAnnotationSamples</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>EpicAnnotations</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>EpicAnnotationProcessing</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>EpicAnnotationJdkProcessing</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>MLanguageCore</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>MLanguageModel</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>MLanguageParser</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>MLanguageANTLRParser</artifactId>
				<version>${project.version}</version>
			</dependency>
		
		
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.10.8</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>
	<reporting>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<!-- Default configuration for all reports -->
				</configuration>
				<reportSets>
					<reportSet>
						<id>non-aggregate</id>
						<configuration>
							<!-- Specific configuration for the non aggregate report -->
						</configuration>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
					<reportSet>
						<id>aggregate</id>
						<configuration>
							<!-- Specific configuration for the aggregate report -->
						</configuration>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
	<profiles>

	</profiles>
</project>
